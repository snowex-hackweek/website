name: NetlifyPreview

on:
  pull_request_target:
    types: [labeled, synchronize]

env:
  DOCKER_IMAGE: uwhackweek/snowex:latest

jobs:
  add-preview:
    runs-on: ubuntu-20.04
    # This workflow accesses secrets and checks out a PR, so only run if labelled
    # https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
    if: contains(github.event.pull_request.labels.*.name, 'preview')

    steps:
    - name: Checkout PR
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Pull SnowEX Docker Image
      run: |
        docker pull $DOCKER_IMAGE
        docker images

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
        role-to-assume: github-actions-role
        role-duration-seconds: 900

    # NOTE: this gets picked up b/c of the docker run -v mount
    - name: Configure NASA Earthdata Login
      run: |
        echo "machine urs.earthdata.nasa.gov login ${{ secrets.EARTHDATA_LOGIN }} password ${{ secrets.EARTHDATA_PASSWORD }}" > .netrc
        chmod 0600 .netrc

    # NOTE: --warningiserror not used here, so that whatever does work is rendered
    # NOTE github actions id: uid=1001(runner) gid=121(docker) groups=121(docker),4(adm),101(systemd-journal)
    # Docker volume mount requires uid matching host, so we change from default (jovyan uid=1000)
    - name: Build JupyterBook
      run: |
        docker run -u 1001 \
        -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY -e AWS_SESSION_TOKEN \
        -v ${{ github.workspace }}:/home/jovyan:rw \
        $DOCKER_IMAGE jb build book

    - name: Deploy Website Preview
      uses: nwtgck/actions-netlify@v1.1
      with:
        publish-dir: './book/_build/html'
        production-deploy: false
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-commit-comment: false
        enable-pull-request-comment: true
        overwrites-pull-request-comment: true
        alias: deploy-preview-${{ github.event.number }}
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      timeout-minutes: 1
